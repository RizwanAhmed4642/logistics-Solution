@model OcdlogisticsSolution.Common.ViewModels.DistributionServicesViewModel

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8">

            <div class="card box-shadow border-0 rounded">
                <h4 class="p-4 d-flex text-right font-weight-light border-bottom bg-light">
                    Create or Edit Distribution Service
                </h4>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "DistributionServices"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x=>x.Id)
                        
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ShortText, "Short Text", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ShortText, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.ShortText, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DurationType, "Duration Type", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.DurationType, null, new { @class = "form-control col-12" })
                                @Html.ValidationMessageFor(model => model.DurationType, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div class="d-flex justify-content-between">
                                    @Html.LabelFor(model => model.Packages, "Packages", htmlAttributes: new { @class = "control-label" })
                                    <a href="@Url.Action("CreatePackage",new {returnUrl="../../"+Request.Url.PathAndQuery })">Not Found?</a>
                                </div>
                                @Html.ListBoxFor(model => model.Packages, null, new { @class = "form-control col-12" })
                                @Html.ValidationMessageFor(model => model.Packages, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <div class="text-right">

                                    @if (!string.IsNullOrEmpty(Model.Id))
                                    {
                                        <input type="submit" value="Update & Save Changes" class="btn btn-primary" />
                                    }
                                    else
                                    {
                                        <input type="submit" value="Create" class="btn btn-primary" />
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>