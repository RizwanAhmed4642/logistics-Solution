@model IEnumerable<OcdlogisticsSolution.DomainModels.Models.Entity_Models.AspNetUsers>
@{
    ViewBag.Title = "User List";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";

}

@using Microsoft.AspNet.Identity
@using OcdlogisticsSolution.DomainModels.Models.Entity_Models
@{
    var userId = User.Identity.GetUserId();
    OcdlogisticsEntities db = new OcdlogisticsEntities();
    var CurrentUser = db.AspNetUsers.Find(userId);
}


<div class="d-flex flex-column-fluid">
    <!--begin::Container-->
    <div class="container">
        <div class="card card-custom">
            <div class="card-header">
                <div class="card-title">

                    <h3 class="card-label">User List</h3>
                </div>

            </div>
            <div class="card-body">
                <!--begin: Datatable-->
                <table class="table table-bordered table-hover table-checkable" id="kt_datatable" style="margin-top: 13px !important">
                    <thead>
                        <tr>
                            <th>User Name</th>
                            <th>Email</th>
                            <th>Email Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.FirstName @item.LastName </td>
                                <td>@item.Email</td>
                                <td>
                                    @if (item.EmailConfirmed)
                                    {
                                        @:<text>confirmed</text>
                                    }
                                    else
                                    {
                                        @:<text>not yet confirmed</text>
                                    }
                                </td>
                                <td>
                                    @if ((User.IsInRole("Admin") || CurrentUser.AspNetUserRoles.Any(x => x.AspNetRoles.tblRights.AllowToUpdateUser)))
                                    {
                                        <a href="@Url.Action("EditUser", "AdminUser", new { userId = item.Id })" class="mr-3" title="Edit"><i class="fas fa-edit text-primary"></i></a>
                                    }


                                    @if ((User.IsInRole("Admin") || CurrentUser.AspNetUserRoles.Any(x => x.AspNetRoles.tblRights.AllowToDeleteUser)))
                                    {
                                        using (Html.BeginForm("DeleteUser", "AdminUser", new {userId = item.Id }, FormMethod.Post, new { @class = "d-inline-block" }))
                                        {
                                            <span onclick="$(this).parents('form').submit()">
                                                <i class="fas fa-trash-alt text-danger"></i>
                                            </span>

                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!--end: Datatable-->
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            GetList();
        });

        function GetList() {

            var FetchItems = "/AdminDashboard/AdminUser/GetList";

            var oTable = $('#kt_datatable').DataTable({
                "iDisplayLength": 50,
                "bServerSide": true,
                "bDestroy": true,
                "async": false,
                "sAjaxSource": FetchItems,
                "bProcessing": false,
                "aoColumns": [
                    { "mData": "UserName" },
                    { "mData": "Email" },
                    { "mData": "EmailConfirmed" },
                    {
                        "mData": "Id",
                        "mRender": function (data, type, row, meta) {
                            var CommitteeID = row.Id;
                            var str = '<a class="btn btn-sm btn-primary"  href="/AdminDashboard/AdminUser/EditUser?UserId=' + CommitteeID + '"><i class="fas fa-edit"></i >Edit</a > ';
                            //str += '<a class="btn btn-sm btn-danger" style="margin-left:5px" onclick="swaldell( '+CommitteeID+')">Delete</a>';
                            return str;
                        },
                        "bSearchable": false,
                        "bSortable": false
                    }
                ],
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "GET",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback,
                        "error": function (e) {
                            console.log(e.message);
                        }
                    });
                }
            });
        }
        function swaldell(e) {
            alert("cli")
            //swal({
            //    title: "Are you sure?",
            //    text: "You will not be able to recover this imaginary file!",
            //    type: "warning",
            //    showCancelButton: true,
            //    confirmButtonClass: "btn-danger",
            //    confirmButtonText: "Yes, delete it!",
            //    cancelButtonText: "No, cancel plx!",
            //    closeOnConfirm: false,
            //    closeOnCancel: false
            //}, function (isConfirm) {
            //    if (isConfirm) {
            //        swal("Deleted!", "Your record has been deleted.", "success");
            //        window.location.href = '/AdminDashboard/EventType/Delete?id=' + DelID;

            //    }
            //    else {
            //        swal("Cancelled", "Your record is safe :)", "error");
            //    }

            //});
        }

    </script>

}
